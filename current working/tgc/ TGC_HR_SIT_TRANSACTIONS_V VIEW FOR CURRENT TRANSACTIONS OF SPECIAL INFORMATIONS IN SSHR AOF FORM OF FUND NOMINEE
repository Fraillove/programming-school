CREATE OR REPLACE VIEW TGC_HR_SIT_TRANSACTIONS_V AS
SELECT ouq."TRANSACTION_STEP_ID",ouq."P_ACTION",ouq."P_ANALYSIS_CRITERIA_ID",ouq."P_DATE_FROM",ouq."P_DATE_TO",ouq."P_PERSON_ID",ouq."P_OLD_ANALYSIS_CRITERIA_ID",ouq."P_ID_FLEX_NUM",ouq."NEW_PERCENTAGE",ouq."OLD_PERCENTAGE",

/*
                DIFFERENT BETWEEN VALUES
                PURPOSE:
                       1) IF INSERT THEN
                             => EFEFCTIVE DATE IS NULL    RETURN NEW PERCENTAGE
                             => EFEFCTIVE DATE IS NOT NULL  THEN RETUN 0

                       2) IF UPDATE THEN
                             => EFEFCTIVE DATE IS NULL RETURN    (NEW PERCENTAGE - OLD PERCENTAGE )

                                      x 100 UPDATE BY 50 SO  50 WILL BE ABSTRACT FROM APPROVE
                                      x 50 UPDATE  BY 50 SO 0
                                      x 50 UPDATE  BY 70 SO 20 WILL BE ADD INTO APPROVE

                             => EFEFCTIVE DATE IS NOT NULL RETURN OLD PERCENTAGE
*/
        (CASE
            WHEN P_ACTION ='INSERT' AND P_DATE_TO IS NULL
                 THEN TO_NUMBER(OUQ.NEW_PERCENTAGE)
            WHEN P_ACTION ='INSERT' AND P_DATE_TO IS NOT NULL
                 THEN 0
            WHEN P_ACTION ='UPDATE' AND P_DATE_TO IS NULL
                 THEN OUQ.NEW_PERCENTAGE-OUQ.OLD_PERCENTAGE
            WHEN P_ACTION ='UPDATE' AND P_DATE_TO IS NOT NULL
                 THEN TO_NUMBER('-'||OUQ.NEW_PERCENTAGE)
         END ) ACTUAL_PERCENTAGE




FROM
(
SELECT INQ.*,
         /* IF TRANSACTION IS insert/UPDATE  THEN  THAT IS NEW PERCENTAGE */
         (
          SELECT NVL(PAC.SEGMENT6,0)
          FROM per_analysis_criteria PAC
          WHERE PAC.ANALYSIS_CRITERIA_ID=INQ.P_ANALYSIS_CRITERIA_ID
         ) NEW_PERCENTAGE ,

         /* IF TRANSACTION IS UPDATED THEN IT WILL SHOW OLD PERCENTAGE*/
         (
          SELECT NVL(PAC.SEGMENT6,0)
          FROM per_analysis_criteria PAC
          WHERE PAC.ANALYSIS_CRITERIA_ID=INQ.P_OLD_ANALYSIS_CRITERIA_ID
         ) OLD_PERCENTAGE


 FROM (
SELECT hatv.TRANSACTION_STEP_ID ,
       max(decode(NAme,'P_ACTION',hatv.VARCHAR2_VALUE))P_ACTION,
       max(decode(NAme,'P_ANALYSIS_CRITERIA_ID',hatv.NUMBER_VALUE))P_ANALYSIS_CRITERIA_ID,
       max(decode(NAme,'P_DATE_FROM',hatv.DATE_VALUE ))P_DATE_FROM,
       max(decode(NAme,'P_DATE_TO',hatv.DATE_VALUE ))P_DATE_TO,
       max(decode(NAme,'P_PERSON_ID',hatv.NUMBER_VALUE))P_PERSON_ID,
       max(decode(NAme,'P_OLD_ANALYSIS_CRITERIA_ID',hatv.NUMBER_VALUE))P_OLD_ANALYSIS_CRITERIA_ID,
       max(decode(NAme,'P_ID_FLEX_NUM',hatv.NUMBER_VALUE))P_ID_FLEX_NUM


FROM   hr_api_transaction_values hatv
WHERE  1=1
group by hatv.TRANSACTION_STEP_ID
-- P_ID_FLEX_NUM IS FLEX_NUMBER OF SPECIAL INFORMATION "FUND NOMINEE"
      HAVING max(decode(NAme,'P_ID_FLEX_NUM',hatv.NUMBER_VALUE))=50430
) inq
)ouq
;
